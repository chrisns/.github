name: "Docker build"
on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string
        default: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
    secrets:
      DOCKER_PASSWORD:
        required: false
      

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: write
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
      id-token: none

    steps:
      - name: Checkout repo
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          fetch-depth: '0'
          submodules: true
      - uses: docker/setup-buildx-action@16c0bc4a6e6ada2cfd8afd41d22d95379cf7c32a # v2.8.0
      - uses: docker/setup-qemu-action@2b82ce82d56a2a04d2637cd93a637ae1b359c0a7 # v2.2.0

      - name: Semver run
        id: semver
        uses: lukaszraczylo/semver-generator@403b3f115fc9371ff4bf5a64e1328d2ba99260b4 # 1.10.143
        with:
          config_file: .github/semver.yaml
          repository_local: true

      - name: Login to GitHub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175 # v4.6.0
        with:
            # ${{ secrets.DOCKER_PASSWORD != '' && github.repository }}
          images: |
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.semver.outputs.semantic_version }}
            type=sha,format=long
            type=edge,branch=$repo.default_branch

      - name: build+push
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825 # v4.1.1
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

    outputs:
      tags: ${{ steps.docker_meta.outputs.tags }}

  sign:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: write
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
      id-token: write

    steps:
      - name: Login to GitHub
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc # v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 # v3.1.1
      - name: Sign the images
        run: cosign sign -y ${TAGS}
        env:
          TAGS: ${{needs.build.outputs.tags}}
          COSIGN_EXPERIMENTAL: 1
