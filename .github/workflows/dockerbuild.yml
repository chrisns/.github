name: "Docker build"
on:
  workflow_call:
    inputs:
      platforms:
        required: true
        type: string
        default: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
    secrets:
      DOCKER_PASSWORD:
        required: false
      

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: write
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
      id-token: none

    steps:
      - name: Checkout repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3
        with:
          fetch-depth: '0'
          submodules: true
      - uses: docker/setup-buildx-action@8c0edbc76e98fa90f69d9a2c020dcb50019dc325 # v2.2.1
      - uses: docker/setup-qemu-action@e81a89b1732b9c48d79cd809d8d81d79c4647a18 # tag=v2.1.0

      - name: Semver run
        id: semver
        uses: lukaszraczylo/semver-generator@c97f47c48b92cfe847f00fbd517c7a5a74831429 # 1.10.73
        with:
          config_file: .github/semver.yaml
          repository_local: true

      - name: Login to GitHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: docker_meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 # v4.3.0
        with:
            # ${{ secrets.DOCKER_PASSWORD != '' && github.repository }}
          images: |
            ghcr.io/${{ github.repository }}
          flavor: |
            latest=true
          tags: |
            type=raw,value=${{ steps.semver.outputs.semantic_version }}
            type=sha,format=long
            type=edge,branch=$repo.default_branch

      - name: build+push
        uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3 # v3.3.0
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}

    outputs:
      tags: ${{ steps.docker_meta.outputs.tags }}

  sign:
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      actions: none
      checks: none
      contents: none
      deployments: none
      issues: none
      packages: write
      pull-requests: none
      repository-projects: none
      security-events: none
      statuses: none
      id-token: write

    steps:
      - name: Login to GitHub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # tag=v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: sigstore/cosign-installer@9becc617647dfa20ae7b1151972e9b3a2c338a2b # tag=v2.8.1
      - name: Sign the images
        run: cosign sign ${TAGS}
        env:
          TAGS: ${{needs.build.outputs.tags}}
          COSIGN_EXPERIMENTAL: 1